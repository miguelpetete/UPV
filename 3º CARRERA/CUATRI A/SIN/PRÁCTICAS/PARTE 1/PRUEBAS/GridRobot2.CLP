(deffacts hechos
	(agujero 1 3)
	(agujero 1 5)
	(agujero 2 1)
	(agujero 4 3)
	(agujero 4 5)
	(agujero 6 1)
	(agujero 7 5)
	(agujero 8 1)
	(agujero 8 3)
)
(deffunction inicio ()
	(reset)
	(printout t "Profundidad Maxima:= " )
	(bind ?prof (read))
	(printout t "Tipo de B�squeda " crlf "1.- Anchura" crlf "2.- Profundidad" crlf )
	(bind ?a (read))
	(printout t "Tamaño máximo eje X grid:= " )
	(bind ?xgrid (read))
	(printout t "Tamaño máximo eje Y grid:= " )
	(bind ?ygrid (read))
	(if (= ?a 1)
 		then (set-strategy breadth)
 		else (set-strategy depth))
 	(assert (robot 2 3 lata 3 1 lata 3 3 lata 6 4 hecho 0 nivel 0 movimiento 0 latas 3))
 	(assert (prof-max ?prof))
	(assert (grid ?xgrid ?ygrid))
)
(defrule robot_derecha
	?f<-(robot ?x ?y $?ini lata ?lx ?y $?mid hecho ?fact nivel ?niv movimiento ?mov $?fin)
	(prof-max ?prof)
	(grid ?xgrid ?ygrid)
	(test (not (agujero (+ ?x 1) ?y)))
	(test (<> (+ ?x 1) ?lx))
	(test (< ?x ?xgrid))
	(test (neq ?mov izquierda))
	(test (< ?niv ?prof))
	=>
	(assert (robot (+ ?x 1) ?y $?ini lata ?lx ?y $?mid hecho ?f nivel (+ ?niv 1) movimiento derecha $?fin))
)
(defrule robot_izquierda
	?f<-(robot ?x ?y $?ini lata ?lx ?y $?mid hecho ?fact nivel ?niv movimiento ?mov $?fin)
	(prof-max ?prof)
	(grid ?xgrid ?ygrid)
	(test (> ?x 1))
	(test (not (agujero (- ?x 1) ?y)))
	(test (<> (- ?x 1) ?lx))
	(test (neq ?mov derecha))
	(test (< ?niv ?prof))
	=>
	(assert (robot (- ?x 1) ?y $?ini lata ?lx ?y $?mid hecho ?f nivel (+ ?niv 1) movimiento izquierda $?fin))
)
(defrule robot_arriba
	?f<-(robot ?x ?y $?ini lata ?x ?ly $?mid hecho ?fact nivel ?niv movimiento ?mov $?fin)
	(prof-max ?prof)
	(grid ?xgrid ?ygrid)
	(test (< ?y ?ygrid))
	(test (not (agujero ?x (+ ?y 1))))
	(test (<> (+ ?y 1) ?ly))
	(test (neq ?mov abajo))
	(test (< ?niv ?prof))
	=>
	(assert (robot ?x (+ ?y 1) $?ini lata ?x ?ly $?mid hecho ?f nivel (+ ?niv 1) movimiento arriba $?fin))
)
(defrule robot_abajo
	?f<-(robot ?x ?y $?ini lata ?x ?ly $?mid hecho ?fact nivel ?niv movimiento ?mov $?fin)
	(prof-max ?prof)
	(grid ?xgrid ?ygrid)
	(test (> ?y 1))
	(test (not (agujero ?x (- ?y 1))))
	(test (<> (- ?y 1) ?ly))
	(test (neq ?mov arriba))
	(test (< ?niv ?prof))
	=>
	(assert (robot ?x (- ?y 1) $?ini lata ?x ?ly $?mid hecho ?f nivel (+ ?niv 1) movimiento abajo $?fin))
)

(defrule empuja_derecha
	?f<-(robot ?x ?y $?ini lata (+ ?x 1) ?y $?mid hecho ?fact nivel ?niv movimiento ?mov $?fin)
	(prof-max ?prof)
	(grid ?xgrid ?ygrid)
	(test (not (agujero (+ ?x 2) ?y)))
	(test (< ?x (- ?xgrid 1)))
	(test (< ?niv ?prof))
	=>
	(assert (robot (+ ?x 1) ?y $?ini lata (+ ?x 2) ?y $?mid hecho ?f nivel (+ ?niv 1) movimiento empuja_derecha $?fin))
)
